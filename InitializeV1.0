#include <AccelStepper.h>
#include <MultiStepper.h>

//State Variables
bool start = true; 

// define pins
const int stepPinA = 2;
const int dirPinA = 3;
const int stepPinB = 4;
const int dirPinB = 5;


// instantiate stepper motor objects
AccelStepper A(AccelStepper::DRIVER, stepPinA, dirPinA);
AccelStepper B(AccelStepper::DRIVER, stepPinB, dirPinB);

//Limit Switch Variables
const int limitSwitch_x = 8;
const int limitSwitch_y = 9;


void setup() {
  Serial.begin(115200);

  //Stepper Setup
  A.setMaxSpeed(5000.0);
  B.setMaxSpeed(5000.0);
  A.setCurrentPosition(0.);
  B.setCurrentPosition(0.); 
  A.setAcceleration(5000.);
  B.setAcceleration(5000.);
  
 

  //Limit Switches
  pinMode(limitSwitch_x, INPUT_PULLUP);
  pinMode(limitSwitch_y, INPUT_PULLUP);
  

  Serial.print("initialized");
  
  start = 1;
  }

void loop() {

 initialize();
 
}


void initialize(){

  if(start){
    
    while(digitalRead(limitSwitch_y)){
      negY();
      }
      
    stopBoth();
    delay(100);

    while(digitalRead(limitSwitch_x)){
      negX();
    }

    stopBoth();
    currentPositionZero();
    start = 0; 
    }  
}



void posX(){
  A.setSpeed(100);
  B.setSpeed(100);
  A.runSpeed();
  B.runSpeed();
}

void negX(){
  A.setSpeed(-100);
  B.setSpeed(-100);
  A.runSpeed();
  B.runSpeed();
}

void posY(){
  A.setSpeed(100);
  B.setSpeed(-100);
  A.runSpeed();
  B.runSpeed();
}

void negY(){
  A.setSpeed(-100);
  B.setSpeed(100);
  A.runSpeed();
  B.runSpeed();
}
void stopBoth(){
  A.stop();
  B.stop();
}

void currentPositionZero(){
    A.setCurrentPosition(0.0);
    B.setCurrentPosition(0.0);
}


