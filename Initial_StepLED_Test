#include <AccelStepper.h>
#include <MultiStepper.h>



// define stepper pins
const int stepPinX = 2;
const int dirPinX = 3;
const int stepPinY = 4;
const int dirPinY = 5;

//LED variables
#define GREEN_LED 9
#define RED_LED 8
#define BLUE_LED 7

int brightness = 255;

int gBright = 0;
int rBright = 0;
int bBright = 0;

// instantiate stepper motor objects
AccelStepper xStepper(AccelStepper::DRIVER, stepPinX, dirPinX);
AccelStepper yStepper(AccelStepper::DRIVER, stepPinY, dirPinY);


void setup() {
  Serial.begin(115200);
  xStepper.setMaxSpeed(5000.0);
  yStepper.setMaxSpeed(5000.0);
  xStepper.setCurrentPosition(0.);
  yStepper.setCurrentPosition(0.);
  xStepper.setAcceleration(1000.);
  yStepper.setAcceleration(1000.);

  pinMode(GREEN_LED, OUTPUT);
  pinMode(RED_LED, OUTPUT);
  pinMode(BLUE_LED, OUTPUT);

  Serial.print('Initialized');
  TurnOn();
}

void TurnOn() {

  // fade in from min to max in increments of 5 points:
  for (int fadeValue = 0 ; fadeValue <= 255; fadeValue += 5) {

    // sets the value (range from 0 to 255):

    //analogWrite(GREEN_LED, fadeValue);
    //analogWrite(BLUE_LED, fadeValue);
    analogWrite(RED_LED, fadeValue);

    // wait for 30 milliseconds to see the dimming effect
    delay(30);

  }
}

void TurnOff() {
  // fade out from max to min in increments of 5 points:

  for (int fadeValue = 255 ; fadeValue >= 0; fadeValue -= 5) {

    // sets the value (range from 0 to 255):

    //analogWrite(GREEN_LED, fadeValue);
    //analogWrite(BLUE_LED, fadeValue);
    analogWrite(RED_LED, fadeValue);
    // wait for 30 milliseconds to see the dimming effect

    delay(30);

  }
}

void loop() {
  xStepper.moveTo(100.);
  yStepper.moveTo(100.);
  xStepper.runSpeedToPosition();
  yStepper.runSpeedToPosition();
  xStepper.moveTo(-100.);
  yStepper.moveTo(-100.);
  xStepper.runSpeedToPosition();
  yStepper.runSpeedToPosition();
  Serial.print('moving...');

}
